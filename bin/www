#!/usr/bin/env node

//  Importação das dependências
var app = require('../app');
var debug = require('debug')('stock-info:server');
var http = require('http');

// Definição da porta
var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

// Criação do servidor
var server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);


// Normalização da porta em number, string ou false
function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

// Event listener do servidor HTTP para erros
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // Mensagens para os eventos de erro
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// Event listener do servidor HTTP para escuta 
function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}